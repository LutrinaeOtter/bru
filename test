<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Minigame </title>
  <style>
    body {
      margin: 0;
      background: linear-gradient(to top, #0f2027, #203a43, #2c5364);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 100vh;
      font-family: 'Segoe UI', sans-serif;
      color: white;
    }

    #gameCanvas {
      background: #222;
      border: 4px solid #fff;
      border-radius: 10px;
      display: none;
    }

    h1 {
      font-size: 2em;
      text-align: center;
      animation: fadeIn 2s ease-in-out;
    }

    #start-btn {
      margin-top: 20px;
      padding: 12px 24px;
      font-size: 1.2em;
      background-color: #00c3ff;
      border: none;
      border-radius: 10px;
      color: white;
      cursor: pointer;
      transition: 0.3s;
    }

    #start-btn:hover {
      background-color: #00ff95;
    }

    #scoreBoard {
      font-size: 1.5em;
      margin-bottom: 10px;
      display: none;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-30px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body>
  <h1>bắt bóng đến chết</h1>
  <div id="scoreBoard">cái khả năng vô dụng của mày: 0</div>
  <button id="start-btn" onclick="startLove()">Bấm vào đi</button>
  <canvas id="gameCanvas" width="480" height="320"></canvas>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    const startBtn = document.getElementById("start-btn");
    const scoreBoard = document.getElementById("scoreBoard");

    let ballX = canvas.width / 2;
    let ballY = canvas.height - 30;
    let ballRadius = 10;
    let dx = 2;
    let dy = -2;

    let paddleHeight = 10;
    let paddleWidth = 75;
    let paddleX = (canvas.width - paddleWidth) / 2;

    let rightPressed = false;
    let leftPressed = false;
    let gameStarted = false;
    let score = 0;
    let level = 1; // tăng mỗi khi đủ 5 điểm

    document.addEventListener("keydown", keyDownHandler, false);
    document.addEventListener("keyup", keyUpHandler, false);

    function keyDownHandler(e) {
      if (e.key === "Right" || e.key === "ArrowRight") {
        rightPressed = true;
      } else if (e.key === "Left" || e.key === "ArrowLeft") {
        leftPressed = true;
      }
    }

    function keyUpHandler(e) {
      if (e.key === "Right" || e.key === "ArrowRight") {
        rightPressed = false;
      } else if (e.key === "Left" || e.key === "ArrowLeft") {
        leftPressed = false;
      }
    }

    function drawBall() {
      ctx.beginPath();
      ctx.arc(ballX, ballY, ballRadius, 0, Math.PI * 2);
      ctx.fillStyle = "#00ffff";
      ctx.fill();
      ctx.closePath();
    }

    function drawPaddle() {
      ctx.beginPath();
      ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);
      ctx.fillStyle = "#00ff66";
      ctx.fill();
      ctx.closePath();
    }

    function drawScore() {
      scoreBoard.innerHTML = "Điểm: " + score;
    }

    function increaseSpeed() {
      dx *= 1.1;
      dy *= 1.1;
    }

    function draw() {
      if (!gameStarted) return;

      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBall();
      drawPaddle();
      drawScore();

      if (ballX + dx > canvas.width - ballRadius || ballX + dx < ballRadius) {
        dx = -dx;
      }

      if (ballY + dy < ballRadius) {
        dy = -dy;
      } else if (ballY + dy > canvas.height - ballRadius) {
        if (ballX > paddleX && ballX < paddleX + paddleWidth) {
          dy = -dy;
          score++;

          // tăng tốc độ mỗi khi đạt thêm 5 điểm
          if (score >= level * 5) {
            level++;
            increaseSpeed();
          }

        } else {
          alert("Game Over!\nUi thằng vô dụng được có " + score );
          document.location.reload();
        }
      }

      ballX += dx;
      ballY += dy;

      if (rightPressed && paddleX < canvas.width - paddleWidth) {
        paddleX += 7;
      } else if (leftPressed && paddleX > 0) {
        paddleX -= 7;
      }

      requestAnimationFrame(draw);
    }

    function startLove() {
      startBtn.style.display = "none";
      canvas.style.display = "block";
      scoreBoard.style.display = "block";
      gameStarted = true;
      draw();
    }
  </script>
</body>
</html>
